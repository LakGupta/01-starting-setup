{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItems.js","components/Expenses/ExpensesFilter.js","components/Expenses/ChartBar.js","components/Expenses/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/Expenses/ExpenseForm.js","components/Expenses/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItems","title","amount","ExpensesFilter","value","selected","onChange","event","onFilterYear","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","items","filter","toString","selectedYear","console","log","id","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","onCancel","type","min","step","onClick","NewExpense","generateForm","setGenerateForm","enteredExpenseData","random","onAddExpenseData","DUMMY_DATA","App","setExpenses","newExpenseData","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b38e835.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div> \r\n};\r\n\r\nexport default Card;","import \"./ExpenseDate.css\";\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const date = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n\r\n      <div className=\"expense-date__day\">{date}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItems.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\n\r\nfunction ExpenseItems(props) {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date}></ExpenseDate>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItems;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const yearChangeHandler = (event) => {\r\n    props.onFilterYear(event.target.value);\r\n  };\r\n\r\n\r\nreturn (\r\n  <div className=\"expenses-filter\">\r\n    <div className=\"expenses-filter__control\">\r\n      <label>Filter by year</label>\r\n      <select value={props.selected} onChange={yearChangeHandler}>\r\n        <option value=\"2022\">2022</option>\r\n        <option value=\"2021\">2021</option>\r\n        <option value=\"2020\">2020</option>\r\n        <option value=\"2019\">2019</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from './Chart';\r\nimport ChartBar from './ChartBar';\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\nimport ExpenseItems from \"./ExpenseItems\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterYear = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n    console.log(filteredYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(expenses =>{\r\n    return expenses.date.getFullYear().toString() === filteredYear;\r\n  } )\r\n  \r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter selected={filteredYear} onFilterYear={filterYear} />\r\n        <ExpensesChart  expenses={filteredExpenses}></ExpensesChart>\r\n\r\n\r\n        {filteredExpenses.map(expenses => (\r\n          <ExpenseItems\r\n            key={expenses.id}\r\n            title={expenses.title}\r\n            amount={expenses.amount}\r\n            date={expenses.date}\r\n          />\r\n        ))}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nfunction ExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const amountChangeHandlder = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredAmount(\"\");\r\n    setEnteredTitle(\"\");\r\n    setEnteredDate(\"\");\r\n    props.onCancel();\r\n  };\r\n  \r\n\r\n  \r\nconst cancelClickHandler = () =>{\r\n  props.onCancel();\r\n}\r\n  return (\r\n    <form onSubmit={formSubmitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"text\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandlder}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"Date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n        <button type=\"button\" onClick={cancelClickHandler} >Cancel</button>\r\n      </div>\r\n      \r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\n\r\nfunction NewExpense(props) {\r\n  const [generateForm, setGenerateForm] = useState(false);\r\n\r\n  const ExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    \r\n    props.onAddExpenseData(expenseData);\r\n  };\r\n\r\n  const generateFormHandler = () => {\r\n\r\n    setGenerateForm(true);\r\n\r\n  };\r\n\r\n  const stopGenerating = () => {\r\n\r\n    setGenerateForm(false);\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"new-expense\">\r\n\r\n      {(generateForm===true && <ExpenseForm  onCancel={stopGenerating} onSaveExpenseData={ExpenseDataHandler}/> )}\r\n      { !generateForm && <button onClick={generateFormHandler} >Add New Expense</button>}\r\n      \r\n    </div>\r\n  );\r\n}\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/Expenses/NewExpense\";\n\nconst DUMMY_DATA = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const[expenses, setExpenses] = useState(DUMMY_DATA);\n\n  const addExpenseData = (newExpenseData) => {\n    setExpenses((prevExpenses) => {return [newExpenseData, ...prevExpenses]})\n  };\n  return (\n    <div>\n      <NewExpense onAddExpenseData = {addExpenseData}/>\n      <Expenses items={expenses}></Expenses>\n      </div>\n      \n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}